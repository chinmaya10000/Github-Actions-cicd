name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - kubernetes/**
      - README.md
  pull_request:
    branches: [ "main" ]

jobs:

  gitleaks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup GitLeaks
      uses: gitleaks/gitleaks-action@v2

    - name: Run GitLeaks
      run: gitleaks detect --verbose --source . -f json -r gitleaks.json
    
    - name: Upload GitLeaks Report
      uses: actions/upload-artifact@v4
      with:
        name: gitleaks-report
        path: gitleaks.json
    

  build:
    runs-on: label-1
    needs: gitleaks

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven
      

    - name: Build and Unit Test
      run: mvn clean verify

    - name: Upload Target Directory
      uses: actions/upload-artifact@v4
      with:
        name: build-target
        path: target/
    
    - name: Upload Test Reports
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: target/surefire-reports/*.xml

  sonarqube:
    runs-on: label-1
    needs: build

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Restore Target Directory
      uses: actions/download-artifact@v4
      with:
        name: build-target
        path: target/

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.2.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
    
    # Check the Quality Gate status.
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        pollingTimeoutSec: 600
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
























# sudo dnf install -y icu
